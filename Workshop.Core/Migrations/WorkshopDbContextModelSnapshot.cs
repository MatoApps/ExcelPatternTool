// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workshop.Core.DataBase;

namespace Workshop.Core.Migrations
{
    [DbContext(typeof(WorkshopDbContext))]
    partial class WorkshopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Workshop.Core.Domains.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Batch")
                        .HasColumnType("TEXT");

                    b.Property<string>("Dept")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EmployeeAccountId")
                        .HasColumnType("TEXT");

                    b.Property<string>("IDCard")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobCate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Level")
                        .HasColumnType("TEXT");

                    b.Property<int>("Mounth")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Proj")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SalayInfoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeAccountId");

                    b.HasIndex("SalayInfoId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Workshop.Core.Domains.EmployeeAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountBankAlias")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountBankLoc")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountBankName")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNum")
                        .HasColumnType("TEXT");

                    b.Property<string>("SocialInsuranceNum")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EmployeeAccount");
                });

            modelBuilder.Entity("Workshop.Core.Domains.SalayInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AgeBonus")
                        .HasColumnType("TEXT");

                    b.Property<string>("AttendanceDeduct")
                        .HasColumnType("TEXT");

                    b.Property<string>("BasicSalary")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bonus1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bonus2")
                        .HasColumnType("TEXT");

                    b.Property<string>("HolidayOvertime")
                        .HasColumnType("TEXT");

                    b.Property<string>("HostelAllowances")
                        .HasColumnType("TEXT");

                    b.Property<string>("MealAllowances")
                        .HasColumnType("TEXT");

                    b.Property<string>("MonthlyAttendance")
                        .HasColumnType("TEXT");

                    b.Property<string>("NightAllowances")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrdinaryOvertime")
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherAllowances")
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherDeduct")
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherRewards")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParttimeSalary")
                        .HasColumnType("TEXT");

                    b.Property<string>("PerformanceBonus")
                        .HasColumnType("TEXT");

                    b.Property<string>("PerformanceDeduct")
                        .HasColumnType("TEXT");

                    b.Property<string>("PerformanceRewards")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostAllowance")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProbationSalary")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuarterlyAttendance")
                        .HasColumnType("TEXT");

                    b.Property<string>("SalesBonus")
                        .HasColumnType("TEXT");

                    b.Property<string>("SkillSalary")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sum")
                        .HasColumnType("TEXT");

                    b.Property<string>("SupplementDeduct")
                        .HasColumnType("TEXT");

                    b.Property<string>("SupplementRewards")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SalayInfo");
                });

            modelBuilder.Entity("Workshop.Core.Domains.Employee", b =>
                {
                    b.HasOne("Workshop.Core.Domains.EmployeeAccount", "EmployeeAccount")
                        .WithMany()
                        .HasForeignKey("EmployeeAccountId");

                    b.HasOne("Workshop.Core.Domains.SalayInfo", "SalayInfo")
                        .WithMany()
                        .HasForeignKey("SalayInfoId");

                    b.Navigation("EmployeeAccount");

                    b.Navigation("SalayInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
